@page
@model MvcMovieFrontOffice.Pages.ReservationBo.EditModel

@{
    ViewData["Title"] = "Edit";
    Layout = "_AdminLayout";
}

<div class="card">
    <div class="card-header">
        <strong>Edit reservation: @Model.ReservationView?.ReservationId</strong>
    </div>
    <div class="card-body card-block">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" name="id" value="@Model.ReservationView?.ReservationId" />
        <div class="row">
            <div class="col-md-6">
                <!-- Model -->
                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="startDate" class="form-control-label">Start Date</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <input type="date" id="startDate" name="startDate" value="@Model.ReservationView?.StartDate.ToString("yyyy-MM-dd")" class="form-control">
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="endDate" class="form-control-label">End Date</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <input type="date" id="endDate" name="endDate" value="@Model.ReservationView?.EndDate.ToString("yyyy-MM-dd")" class="form-control">
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="status" class="form-control-label">Status</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <select id="status" name="status" class="form-control">
                            <option value="pending" @(Model.ReservationView?.Status == "pending" ? "selected" : "")>pending</option>
                            <option value="confirmed" @(Model.ReservationView?.Status == "confirmed" ? "selected" : "")>confirmed</option>
                            <option value="completed" @(Model.ReservationView?.Status == "completed" ? "selected" : "")>completed</option>
                            <option value="canceled" @(Model.ReservationView?.Status == "canceled" ? "selected" : "")>canceled</option>
                        </select>
                    </div>
                </div>
                <!-- Make -->
                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="totalPrice" class="form-control-label">Total Price</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <input type="number" id="totalPrice" name="totalPrice" value="@Model.ReservationView?.TotalPrice" class="form-control">
                    </div>
                </div>
                <!-- Year -->
                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="model" class="form-control-label">Model</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <input type="text" id="model" name="model" value="@Model.ReservationView?.Model" class="form-control">
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="make" class="form-control-label">Make</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <input type="text" id="make" name="make" value="@Model.ReservationView?.make" class="form-control">
                    </div>
                </div>
                <!-- Price -->
                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="availability" class="form-control-label">Availability</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <select id="availability" name="availability" class="form-control">
                            <option value="true" @(Model.ReservationView?.availability == true ? "selected" : null)>Available</option>
                            <option value="false" @(Model.ReservationView?.availability == false ? "selected" : null)>Unavailable</option>
                        </select>
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="fullname" class="form-control-label">FullName</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <input type="text" id="fullname" name="fullname" value="@Model.ReservationView?.FullName" class="form-control">
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <button id="saveButton" class="btn btn-primary btn-sm">
                <i class="zmdi zmdi-save"></i> Save
            </button>
            <a href="/ReservationBo/Index" class="btn btn-danger btn-sm">
                <i class="fa fa-arrow-left"></i> Cancel
            </a>
        </div>
    </div>
</div>

<script>
    document.getElementById("saveButton").addEventListener("click", async function (event) {
        event.preventDefault();

        const reservationUpdate = {
            id: @Json.Serialize(Model.ReservationView?.ReservationId ?? 0),
            vehicleId: @Json.Serialize(Model.ReservationView?.VehicleId ?? 0),
            userId: @Json.Serialize(Model.ReservationView?.UserId ?? ""),
            startDate: @Json.Serialize(Model.ReservationView?.StartDate.ToString("yyyy-MM-ddTHH:mm:ss") ?? ""),
            endDate: @Json.Serialize(Model.ReservationView?.EndDate.ToString("yyyy-MM-ddTHH:mm:ss") ?? ""),
            status: document.getElementById("status").value,
            totalPrice: @Json.Serialize(Model.ReservationView?.TotalPrice ?? 0),
            createdAt: new Date().toISOString(),
            updatedAt: new Date().toISOString()
        };

        console.log("Updating reservation:", reservationUpdate);

        try {
            const response = await fetch(`http://localhost:5259/api/reservations/${@Model.ReservationView?.ReservationId}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(reservationUpdate)
            });

            if (response.ok) {
                alert("Reservation updated successfully!");
                window.location.href = "/ReservationBo/Index";
            } else {
                const errorMessage = await response.text();
                alert("Error: " + errorMessage);
            }
        } catch (error) {
            console.error("Network error:", error);
            alert("An error occurred while updating the reservation.");
        }
    });
</script>