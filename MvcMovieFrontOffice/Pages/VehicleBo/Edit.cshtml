@page
@model MvcMovieFrontOffice.Pages.VehicleBo.Edit

@{
    ViewData["Title"] = "Edit";
    Layout = "_AdminLayout";
}

<div class="card">
    <div class="card-header">
        <strong>Edit vehicle: @Model.VehicleView?.VehicleId</strong>
    </div>
    <div class="card-body card-block">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" name="id" value="@Model.VehicleView?.VehicleId" />
        <div class="row">
            <div class="col-md-6">
                <!-- Model -->
                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="model" class="form-control-label">Model</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <input type="text" id="model" name="model" value="@Model.VehicleView?.Model" class="form-control">
                    </div>
                </div>
                <!-- Make -->
                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="make" class="form-control-label">Make</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <input type="text" id="make" name="make" value="@Model.VehicleView?.Make" class="form-control">
                    </div>
                </div>
                <!-- Year -->
                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="year" class="form-control-label">Year</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <input type="number" id="year" name="year" value="@Model.VehicleView?.Year" class="form-control">
                    </div>
                </div>
                <!-- Price -->
                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="price" class="form-control-label">Price</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <input type="number" id="price" name="price" value="@Model.VehicleView?.Price" class="form-control">
                    </div>
                </div>
                <!-- Availability -->
                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="availability" class="form-control-label">Availability</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <select id="availability" name="availability" class="form-control">
                            <option value="true" @(Model.VehicleView?.Availability == true ? "selected" : null)>Available</option>
                            <option value="false" @(Model.VehicleView?.Availability == false ? "selected" : null)>Unavailable</option>
                        </select>
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="VehicleType" class="form-control-label">Type</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <select id="VehicleType" name="typeId" class="form-control">
                            @foreach (var type in Model.VehicleTypes!)
                            {
                                <option value=@type.Id selected="@(type.Id == Model.VehicleView?.VehicleTypeId ? "selected" : null)">
                                    @type.Name
                                </option>
                            }
                        </select>
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col col-md-3">
                        <label for="new-img" class="form-control-label">New Vehicle's Image</label>
                    </div>
                    <div class="col-12 col-md-9">
                        <input type="file" id="new-img" accept="image/png, image/jpeg, image/jpg" name="Image" class="form-control">
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <!-- Vehicle Image -->
                <div class="form-group">
                    @if (!string.IsNullOrEmpty(Model.VehicleView?.VehicleImage))
                    {
                        <img width="500" src="data:image/png;base64,@Model.VehicleView.VehicleImage" alt="Vehicle Image" class="img-fluid mt-2">
                    }
                </div>
            </div>
        </div>
        <div class="card-footer">
            <button id="saveButton" class="btn btn-primary btn-sm">
                <i class="fa fa-save"></i> Save
            </button>
            <a href="/VehicleBo/Details?id=@Model.VehicleView?.VehicleId" class="btn btn-danger btn-sm">
                <i class="fa fa-arrow-left"></i> Cancel
            </a>
        </div>
    </div>
</div>

<script>
    document.getElementById("saveButton").addEventListener("click", async function () {

        const vehicleImage = @Html.Raw(Json.Serialize(Model.VehicleView?.VehicleImage));

        const data = {
            id: @Model.VehicleView?.VehicleId,
            model: document.getElementById("model").value,
            make: document.getElementById("make").value,
            year: parseInt(document.getElementById("year").value),
            price: parseFloat(document.getElementById("price").value),
            availability: document.getElementById("availability").value === "true",
            createdAt: new Date(),
            updatedAt: new Date(),
            typeId: parseInt(document.getElementById("VehicleType").value),
            image: vehicleImage
        };

        console.log("Data to send:", data);

        try {
            const response = await fetch("http://localhost:5259/api/vehicles/"+@Model.VehicleView?.VehicleId, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(data)
            });

            if (response.ok) {
                const result = await response.text();
                console.log("Vehicle updated â€¯:", result);
                window.location.href = `/VehicleBo/Details?id=${data.id}`;
            } else {
                console.error("Error fom update :", response.status);
            }
        } catch (error) {
            console.error("Error network :", error);
        }
    });

</script>